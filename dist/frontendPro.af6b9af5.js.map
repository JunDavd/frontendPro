{"mappings":"AACA,wBAAwB;AACxB,yBAAyB;AAEzB,MAAM,MAIF;IACA,OAAO;IACP,OAAO;IACP,MAAM;AACV;AAEA,SAAS,YAAY,IAAe;IAChC,OAAO,KAAK,KAAK;AACrB;AAEA,QAAQ,GAAG,CAAC,YAAY;IACpB,OAAO;IACP,OAAO;AACX;AAEA,mCAAmC;AACnC,0CAA0C;AAE1C,MAAM,WAA8B;IAChC;QAAE,OAAO;QAAU,OAAO;QAAW,MAAM;IAAK;IAChD;QAAE,OAAO;QAAS,OAAO;QAAS,MAAM;IAAK;IAC7C;QAAE,OAAO;QAAU,OAAO;QAAS,MAAM;IAAK;IAC9C;QAAE,OAAO;QAAO,OAAO;QAAM,MAAM;IAAK;IACxC;QAAE,OAAO;QAAS,OAAO;QAAU,MAAM;IAAK;IAC9C;QAAE,OAAO;QAAY,OAAO;QAAW,MAAM;IAAK;IAClD;QAAE,OAAO;QAAU,OAAO;IAAO;IACjC;QAAE,OAAO;QAAO,OAAO;QAAY,MAAM;IAAK;IAC9C;QAAE,OAAO;QAAQ,OAAO;QAAM,MAAM;IAAK;IACzC;QAAE,OAAO;QAAS,OAAO;QAAQ,MAAM;IAAK,EAAO,iBAAiB;CACvE;AAGD,SAAS,gBAAgB,KAAwB;IAC7C,+CAA+C;IAC/C,8BAA8B;IAC9B,+CAA+C;IAC/C,IAAI,SAAmB,EAAE;IACzB,KAAK,MAAM,QAAQ,MACf,IAAG,CAAC,OAAO,QAAQ,CAAC,KAAK,KAAK,GAC1B,OAAO,IAAI,CAAC,KAAK,KAAK;IAG9B,OAAO;AACX;AAEA,QAAQ,GAAG,CAAC,gBAAgB","sources":["ts/3.objetos.ts"],"sourcesContent":["\r\n// const req = fetch('')\r\n// const req2: typeof req\r\n\r\nconst car:{\r\n    brand: string,\r\n    model: string,\r\n    year?: number\r\n} = {\r\n    brand: 'Audi',\r\n    model: 'A3',\r\n    year: 2023\r\n}\r\n\r\nfunction getCarBrand(item:typeof car):string{\r\n    return item.brand\r\n}\r\n\r\nconsole.log(getCarBrand({\r\n    brand: 'Toyota',\r\n    model: 'TXL'\r\n}))\r\n\r\n// let cars: Array<typeof car> = []\r\n// cars.push({brand: 'tesla',model: 'x4'})\r\n\r\nconst testCars: Array<typeof car> = [\r\n    { brand: 'Toyota', model: 'Corolla', year: 2023 },\r\n    { brand: 'Honda', model: 'Civic', year: 2022 },\r\n    { brand: 'Toyota', model: 'Camry', year: 2021 },    // Toyota repetido\r\n    { brand: 'BMW', model: 'X3', year: 2024 },\r\n    { brand: 'Honda', model: 'Accord', year: 2023 },    // Honda repetido\r\n    { brand: 'Mercedes', model: 'C-Class', year: 2022 },\r\n    { brand: 'Toyota', model: 'RAV4' },                 // Toyota repetido, sin year\r\n    { brand: 'BMW', model: 'Series 3', year: 2023 },   // BMW repetido\r\n    { brand: 'Audi', model: 'A4', year: 2024 },\r\n    { brand: 'Honda', model: 'CR-V', year: 2021 }      // Honda repetido\r\n]\r\n\r\n\r\nfunction getBrandsUnique(items: Array<typeof car>): string[]{\r\n    // let brands = items.map((item) => item.brand)\r\n    // return [...new Set(brands)]\r\n    //la de arriba es otra opcion de implementacion\r\n    let brands: string[] = []\r\n    for (const item of items) {\r\n        if(!brands.includes(item.brand)){\r\n            brands.push(item.brand)\r\n        }\r\n    }\r\n    return brands\r\n}\r\n\r\nconsole.log(getBrandsUnique(testCars))\r\n\r\n"],"names":[],"version":3,"file":"frontendPro.af6b9af5.js.map","sourceRoot":"/__parcel_source_root/"}